// variables
$animTime: .1s;
$phoneBreakpoint: 600px;
$desktopBreakpoint: 1000px;
$green: #a9e000;
$pink: #ff85cb;
$blue: #53bbf4;
$orange: #ffac00;
$red: #ff432e;
$grey: #eee;
// mixins
@mixin respond($size) {
  @media only screen and (min-width: $size) {
    @content;
  }
}

// rules
// body & jquery override for modal
body, .ui-widget {
  color: black;
  font-size: 16px;
  font-weight: 300;
  font-family: sans-serif;
}
// set background color
body {
  background-color: $grey;
}
// set anchor behavior
a {
  color: $pink;
  text-decoration: none;
  font-weight: bold;
  &:hover {
    background: $pink;
    color: white;
    text-decoration: underline;
    border-bottom: .25rem solid white;
  }
}
// headers
h1,
h2 {
  text-align: center;
  font-weight: 300;
  letter-spacing: .25rem;
  padding: 0;
  margin: 0;
}
h1 {
  font-size: 1.33rem;
}
h2 {
  font-size: 1rem;
}
// content styles
p {
  width: 75%;
  margin: 1rem auto;
  padding: 0;
}
ul {
  list-style-type: none;
  // Reset margin-left and padding-left
  margin-left: 0;
  padding-left: 0;
  li {
    // Reset margin-left
    margin-left: 0;
    margin-top: .5rem;
  }
}
// Apply this class to get a nice
// under-hover effect upon hover
.under-hover {
  &::after {
    content: "";
    background: $grey;
    height: 0;
    width: 0;
    top: 0.3rem;
    position:relative;
    display: block;
  }
  &:hover {
    &::after {
      width: 100%;
      height: 0.3rem;
      transition: width $animTime ease-out;
    }
  }
}
// section styles
section {
  float: left;
  width: calc(100% - 4rem);
  background-color: #fff;
  margin: 1rem;
  position:relative;
}
// custom rules for game screens
.log,
.controls,
.inventory,
.stocks {
  padding: 1rem;
}
.inventory,
.controls {
  @include respond($phoneBreakpoint) {
    width: calc(30% - 4rem);
  }
}
.log,
.controls {
  height: 18rem;
  font-size: 0.8rem;
}
.title {
  width: calc(100% - 2rem);
  // I only want the header section
  // to be blue
  header {
    background: $blue;
  }
  h1 {
    // Compensating for the the .options-button
    // element's width set below
    width: calc(100% - 11.5rem);
    color: white;
    font-weight: bold;
    padding: .75rem 0;
    // change this if you want to change
    // the centering behavior of the h1 text.
    // This is propportional to the .options-button
    // element's width set below
    padding-left: 6rem;
    // So the gear displays to the right
    // we need to avoid a clear with inline-block
    display: inline-block;
  }
  p {
    background: white;
  }
}
// style the options button
.options-button {
  // other rules
  color: white;
  // If you change this, make sure to change
  // the .title's h1 width's calculation and 
  // the padding-left value accordingly!
  width: 5rem;
  text-align: center;
  display: inline-block;
  padding: .5rem 0;
  cursor: pointer;
  // Set our initial value so the spin animation
  // has something as it's "base"
  transform: rotate(0deg);
  // Smooth transitions are all but certain
  // ease-in-out allows the animation to "playback."
  // Also, should take 3 times as long as the other animations.
  transition: transform $animTime*3 ease;
  &:hover {
    // On hover let's rotate this puppy!
    transform: rotate(90deg);
  }
}
.inventory {
  ul {
    width: 100%;
    li {
      margin-top: .25rem;
      padding: .75rem .5rem;
    }
  }
  .money,
  .location {
    color: white;
    font-weight: bold;
  }
  .money {
    background: darken($green,10%);
  }
  .location {
    background: $orange;
  }
}
.log {
  font-size: 14px;
  font-family: monospace;
  line-height: 20px;
  h2 {
      font-family: sans-serif;
  }
  @include respond($phoneBreakpoint) {
    width: calc(70% - 4rem);
    height: 33rem;
  }
  & ul {
    overflow-y: scroll;
    max-height: 15rem;
    @include respond($phoneBreakpoint) {
      max-height: 30rem;
    }
    li {
      padding: .5rem;
      float: left;
      width: calc(100% - 2rem);
    }
  }
  .stock-increase,
  .stock-decrease {
    @include respond($phoneBreakpoint) {
      width: calc(50% - 2rem);
    }
    @include respond($desktopBreakpoint) {
      width: calc(33% - 2rem);
    }
    margin-right: 1rem;
    margin-bottom: 0.5rem;
    font-size: .8rem;
    &:nth-first-child, &:nth-last-child {
      clear: both;
    }
  }
  .stock-increase {
    background: $green;
  }
  .stock-decrease {
    background: $red;
    color: white;
  }
}
.controls {
  height: auto;
  ul {
    // reset padding-left
    padding-left: 0;
    li {
      cursor: pointer;
      font-weight: bold;
      transition: padding $animTime ease-out;
      color: white;
      padding: 1rem 1rem;
      height: 1.2rem;
      margin-top: 1rem;
      &.buy-button {
        background-color: $blue;
      }
      &.sell-button {
        background-color: $blue;
      }
      &.travel-button {
        background-color: $pink;
      }
      &.data-button {
        background-color: $pink;
      }
      &:hover {
        padding-left: 0.75rem;
      }
    }
  }
  // under-hover override
  .buy-button::after, .sell-button::after {
    background:darken($blue,10%);
  }
  .travel-button::after, .data-button::after {
    background:darken($pink,10%);
  }
}
// Stocks
.stock {
  cursor: pointer;
  transition: background $animTime ease-out,
    width $animTime ease-out;
  background: $blue;
  color: white;
  display: inline-block;
  margin-right: 1rem;
  height: 2rem;
  padding: .75rem 0;
  text-align:center;
  font-family: monospace;
  width: 100%;
  @include respond($phoneBreakpoint) {
    width: calc(50% - 1rem);
  }
  @include respond($desktopBreakpoint) {
    width: auto;
    padding: .75rem .5rem;
    &:nth-child(odd) {
      margin-right: 1rem;
    }
    // under-hover override
    &:hover {
      &::after {
        padding: 0 .5rem;
        left: -0.5rem;
        height: 0.6rem;
      }
    }
  }
  &.owned {
    background: $pink;
    &:hover {
      background: darken($pink,10%);
      &::after {
        background: darken($pink,20%);
      }
    }
  }
  // under-hover override
  &:hover {
    background: darken($blue,10%);
    &::after {
      background: darken($blue,20%);
      height: 0.8rem;
      top: 0.8rem;
    }
  }
}
// jQuery-ui override
.ui-dialog {
  // I don't like border-radius, flat pls
  border-radius: 0;
  background: white;
  // override modal background area
  &.ui-widget-content, .ui-widget-content {
    border: none;
    background: white;
  }
  .ui-dialog-title {
    margin: .1rem 0 0 1.25rem;
    color: white;
  }
  .ui-widget-content {
    // further override the slider, because it's
    // using the class .ui-widget-content
    &.ui-slider {
      background: $grey;
      border-radius: 0;
    }
    .ui-slider-handle {
      border: none;
      border-radius: 0;
      background: $blue;
      height: 1.5rem;
      top: -.36rem;
    }
  }
  // override color header
  .ui-widget-header {
    border: none;
    border-radius: 0;
    background: $blue;
    width: 100%;
    // have to adjust .ui-dialog-titlebar's
    // override if you adjust this left value
    left: -1.5rem;
    top: -.2rem;
  }
  // override buttons
  button{
    &.ui-button {
    font-weight: bold;
    color: white;
    border: none;
      // override the close icon
      &.ui-dialog-titlebar-close {
        border-radius: 0;
        border: $blue 2px solid;
        // reposition because of the
        // .ui-widget-header left override
        right: .8rem;
      }
    }
    // override the buy/cancel buttons
    &.ui-button-text-only {
      border-radius: 0;
      font-family: sans-serif;
      // this actually INCREASES the default
      // padding of the jquery-ui text buttons
      padding: .1rem;
      // override the background color of the text buttons
      &.ui-state-default {
        background: $blue;
      }
      &.ui-state-hover {
        background: darken($blue, 10%);
      }
    }
  }
}
// variables
$animTime: .1s;
$borderWidth: .2rem;
$phoneBreakpoint: 750px;
$desktopBreakpoint: 1000px;
$green: #a9e000;
$pink: #ff85cb;
$blue: #53bbf4;
$orange: #ffac00;
$red: #ff432e;
$grey: #eee;
// mixins
// use this for mobile queries
@mixin respond($size) {
  @media only screen and (min-width: $size) {
    @content;
  }
}
// use this to set border unless setting to border: none;
@mixin border($color) {
  border: $color $borderWidth solid;
}

// rules for body
body {
  color: black;
  font-size: 16px;
  font-weight: 300;
  font-family: 'Muli', sans-serif;
  background-color: $grey;
}
// set anchor behavior
a, .ui-dialog a {
  color: $pink !important;
  text-decoration: none;
  font-weight: bold;
  &:hover {
    // I always want to show pointer on a:hover
    cursor: pointer!important;
    background: $pink;
    color: white !important;
    text-decoration: underline;
    border-bottom: .25rem solid white;
  }
}
// headers
h1,
h2 {
  text-align: center;
  font-weight: 300;
  letter-spacing: .25rem;
  padding: 0;
  margin: 0;
}
h1 {
  font-family: 'Trirong', serif;
  font-weight: bold;
  font-size: 1.5rem;
}
h2 {
  font-size: 1rem;
}
// content styles
p {
  margin: 1rem auto;
  padding: 0;
}
ul {
  list-style-type: none;
  // Reset margin-left and padding-left
  margin-left: 0;
  padding-left: 0;
  li {
    // Reset margin-left
    margin-left: 0;
    margin-top: .5rem;
  }
}
// Apply this class to get a nice
// under-hover effect upon hover
.under-hover {
  &::after {
    content: "";
    background: $grey;
    height: 0;
    width: 0;
    top: 0.3rem;
    position:relative;
    display: block;
  }
  &:hover {
    &::after {
      width: 100%;
      height: 0.3rem;
      transition: width $animTime ease-out;
    }
  }
}
// section styles
section {
  float: left;
  width: calc(100% - 4rem);
  background-color: #fff;
  margin: 1rem;
  position:relative;
}
// custom rules for game screens
.log,
.controls,
.inventory,
.resources {
  padding: 1rem;
}
.inventory,
.controls {
  @include respond($phoneBreakpoint) {
    width: calc(30% - 4rem);
  }
}
.log,
.controls {
  height: 18rem;
  font-size: 0.8rem;
}
.resources {
  ul {
    text-align: center;
  }
}
.title {
  width: calc(100% - 2rem);
  // I only want the header section
  // to be blue
  header {
    background: $blue;
  }
  h1 {
    // We have to compensate for the  options button
    // if it's on the same line as the h1, which is is
    // when we are above phoneBreakpoint
    @include respond($phoneBreakpoint) {
      // Compensating for the the .options-button
      // element's width set below
      width: calc(100% - 11.5rem);
      // change this if you want to change
      // the centering behavior of the h1 text.
      // This is propportional to the .options-button
      // element's width set below
      padding-left: 6rem;
      // So the gear displays to the right
      // we need to avoid a clear with inline-block
      display: inline-block;
    }
    width: 100%;
    color: white;
    padding: .75rem 0;
  }
  p {
    width: 75%;
    background: white;
  }
}
// style the options button
nav.options-button {
  position: relative;
  width: auto;
  margin: auto;
  text-align: center;
  // Need the important here to override
  // font-awesome's display-inline
  display: block;
  top: -.5rem;
  padding: .25rem 0;
  @include respond($phoneBreakpoint) {
    display: inline-block;
    // If you change this, make sure to change
    // the .title's h1 width's calculation and 
    // the padding-left value accordingly!
    width: 5rem;
    // Also push it down just a touch
    top: .15rem;
    // Vertically center with equal padding above and below
    padding: .5rem 0;
  }
  // other rules
  color: white;
  cursor: pointer;
  // Set our initial value so the spin animation
  // has something as it's "base"
  transform: rotate(0deg);
  // Smooth transitions are all but certain
  // ease-in-out allows the animation to "playback."
  // Also, should take 3 times as long as the other animations.
  transition: transform $animTime*3 ease;
  &:hover {
    // On hover let's rotate this puppy!
    transform: rotate(90deg);
  }
}
// style the options screen with
// these general rules, plus the more
// specific rules beneath.
.options-text,
.options-subtext,
.options-author {
  margin-left: 0;
}
// specific rules for each text field
.options-text {
  font-weight: bold;
  font-size: 1.6rem;
  font-family: 'Trirong', serif;
}
.options-subtext {
  font-weight: 300;
  font-size: 0.7rem;
  font-style: italic;
  position: relative;
  top: -1.6rem;
}
.options-author {
  font-family: 'Cutive Mono', monospace;
  font-size: 0.8rem;
}
.inventory {
  ul {
    width: 100%;
    li {
      margin-top: .25rem;
      padding: .75rem .5rem;
    }
  }
  .money,
  .location {
    color: white;
    font-weight: bold;
  }
  .cash-button, .portfolio-button, .net-worth-button {
    cursor: pointer;
  }
  .money {
    background: darken($green,10%);
  }
  .location {
    background: $orange;
  }
}
.log {
  @include respond($phoneBreakpoint) {
    width: calc(70% - 4rem);
    height: 33rem;
  }
  & ul {
  	font-family: 'Cutive Mono', monospace;
    font-size: 14px;
    line-height: 20px;
    overflow-y: scroll;
    max-height: 15rem;
    @include respond($phoneBreakpoint) {
      max-height: 30rem;
    }
    li {
      padding: .5rem;
      float: left;
      width: calc(100% - 2rem);
    }
  }
  .resource-increase,
  .resource-decrease {
    @include respond($phoneBreakpoint) {
      width: calc(50% - 2rem);
    }
    @include respond($desktopBreakpoint) {
      width: calc(33% - 2rem);
    }
    margin-right: 1rem;
    margin-bottom: 0.5rem;
    font-size: .8rem;
    &:nth-first-child, &:nth-last-child {
      clear: both;
    }
  }
  .resource-increase {
    background: $green;
    box-shadow: inset 0 0 0 $borderWidth darken($green, 10%);
  }
  .resource-decrease {
    background: $red;
    box-shadow: inset 0 0 0 $borderWidth darken($red, 20%);
    color: white;
  }
}
.controls {
  height: auto;
  ul {
    // reset padding-left
    padding-left: 0;
    li {
      cursor: pointer;
      font-weight: bold;
      transition: padding $animTime ease-out;
      color: white;
      padding: 1rem 1rem;
      height: 1.2rem;
      margin-top: 1rem;
      &.buy-button {
        background-color: $blue;
      }
      &.sell-button {
        background-color: $blue;
      }
      &.travel-button {
        background-color: $pink;
      }
      &.data-button {
        background-color: $pink;
      }
      &:hover {
        padding-left: 0.75rem;
      }
    }
  }
  // under-hover override
  .buy-button::after, .sell-button::after {
    background:darken($blue,10%);
  }
  .travel-button::after, .data-button::after {
    background:darken($pink,10%);
  }
}
// Resources
.resource {
  position: relative;
  cursor: pointer;
  transition: background $animTime ease-out,
    width $animTime ease-out,
    top $animTime ease-out;
  background: $blue;
  color: white;
  display: inline-block;
  margin-right: 1rem;
  height: auto;
  width: auto;
  padding: .25rem 2rem;
  text-align:center;
  font-size: 1.3rem;
  font-family: 'Cutive Mono', monospace;
  // Let's make it look a little above the element
  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
  p {
    padding: 0;
  }
  @include border(darken($blue, 10%));
  &.owned {
    background: $pink;
    @include border(darken($pink, 10%));
    &:hover {
      background: darken($pink,10%);
      @include border(darken($pink, 20%));
      &::after {
        background: darken($pink,20%);
      }
    }
  }
  // under-hover override
  &:hover {
    background: darken($blue,10%);
    @include border(darken($blue, 20%));
    // increase drop shadow to give illusion of popping up
    box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    // move top just a touch to maintain illusion
    top: -.2rem;
    &::after {
      background: darken($blue,20%);
      height: 0.8rem;
      padding: 0 2rem;
      width: 100%;
      margin-left: -2rem;
      margin-top: -0.9rem;
    }
  }
}
// jQuery-ui dialog override
.ui-dialog {
  // I don't like border-radius, flat pls
  border-radius: 0 !important;
  background: white;
  // Let's make the modal expand to the
  // whole screen's width & height
  height: 100%!important;
  width: 100%!important;
  // If we aren't on the phone, we
  // need to set height and width
  @include respond($phoneBreakpoint) {
    height: auto!important;
    width: auto!important;
  }
  // override modal background area
  &.ui-widget-content, .ui-widget-content {
    border: none;
    background: white;
    color: black;
    font-size: 16px;
    font-weight: 300;
    font-family: 'Muli', sans-serif;
  }
  // override modal title text
  .ui-dialog-title {
    margin: .1rem 0 0 1rem!important;
    color: white;
    width: calc(90% - 2.2rem)!important;
    font-size: 1.25rem;
  }
  .ui-widget-content {
    // further override the slider, because it's
    // using the class .ui-widget-content
    &.ui-slider {
      background: $grey;
      border-radius: 0;
    }
    .ui-slider-handle {
      border: none;
      border-radius: 0;
      background: $blue;
      height: 1.5rem;
      top: -.36rem;
    }
  }
  // override color header
  .ui-widget-header {
    border: none;
    border-radius: 0;
    background: $blue;
    width: 100%;
    // have to adjust .ui-dialog-titlebar's
    // override if you adjust this left value
    left: -1.5rem;
    top: -.2rem;
    // Override padding-bottom so the custom close
    // button doesn't look weird with blue under it
    padding-bottom: .25rem;
    .ui-icon {
      background-image: none;
    }
  }
  div.ui-dialog-buttonpane {
    text-align: center;
    float: none;
    @include respond($phoneBreakpoint) {
      float: right;
    }
    div.ui-dialog-buttonset {
      float: none;
    } 
  }
}
// override jquery-ui buttons
button{
  &.ui-button {
    font-weight: bold;
    color: white;
    border: none;
    // override the close icon
    &.ui-dialog-titlebar-close {
      background-image: none;
      background: none;
      font-family: FontAwesome;
      position: relative;
      font-size: 1.6rem;
      color: white;
      width: 2.2rem;
      height: 2.2rem;
      padding-top: .3rem;
      top: 0.2rem;
      left: 1.4rem;
      border-radius: 0;
      border: none;
      transform: rotate(0deg);
      transition: transform $animTime*3;
      &.ui-state-hover {
        transform: rotate(90deg);
      }
      &::before {
        content: "\f00d";
      }
      @include respond($phoneBreakpoint) {
        left: 4.5rem;
      }
    }
  }
  // override the buy/cancel buttons
  &.ui-button-text-only {
    width: 100%;
    padding: 1rem;
    @include respond($phoneBreakpoint) {
      width: auto;
      float: left;
    }
    border-radius: 0;
    border: none!important;;
    color: white!important;
    // this actually INCREASES the default
    // padding of the jquery-ui text buttons
    padding: .1rem;
    // override the background color of the text buttons
    &.ui-state-default {
      background: $blue;
    }
    &.ui-state-hover {
      background: darken($blue, 10%);
    }
  }
}
// modal dialog rules
#graph-wrapper {
  width: 110vw;
  margin-left: -10%;
  height: 70vh!important;
  @include respond($phoneBreakpoint) {
    // limit the graph's height
    height: 20rem!important;
    width: 40rem;
    // reset the margin-left
    margin-left: -2.5rem;
  }
  @include respond($desktopBreakpoint) {
    width: 60rem;
  }
}
.buy-dialog, .sell-dialog {
  width: 70vw;
  @include respond($phoneBreakpoint) {
    width: 30rem!important;
  }
}
.travel {
  display: none;
}